name: training-pipeline

on:
   schedule:
   - cron: '0 0 * * 0'
 
   workflow_dispatch:

env:
 PYTHON_VERSION: 3.10
 POETRY_VERSION: 1.8.4
 POETRY_URL: https://install.python-poetry.org

jobs:
   training_pipeline:
       runs-on: ubuntu-latest
       steps:
       - name: Checkout
         uses: actions/checkout@v4
   
       - name: Cache Poetry cache
         uses: actions/cache@v4
         with:
           path: ~/.cache/pypoetry
           key: poetry-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.POETRY_VERSION }}
       
       - name: Cache Packages 
         uses: actions/cache@v3
         with:
           path: ~/.local
           key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
       
       - name: Set up Python 3.10
         uses: actions/setup-python@v4
         with:
           python-version: '3.10'

       - name: Debug Python version
         run: |
           which python
           python --version
           echo $PATH

       - name: Install Poetry
         run: |
           python -m pip install --upgrade pip
           curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
           echo "$HOME/.local/bin" >> $GITHUB_PATH
       
       - name: Install Dependencies
         run: poetry install
           
       - name: Run training script
         env:
           HOPSWORKS_PROJECT_NAME: ${{ secrets.HOPSWORKS_PROJECT_NAME }} 
           HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
         run: make training